{
	"name": "pipeline2",
	"properties": {
		"activities": [
			{
				"name": "Lookup1",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Wait1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderStoredProcedureName": "[datafactory].[MockProcedure]",
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "GenericSqlTable",
						"type": "DatasetReference",
						"parameters": {
							"SchemaName": "datafactory",
							"TableName": "byCategorySummery",
							"LoadTime": "@formatDateTime(utcnow())"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Wait1",
				"type": "Wait",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"waitTimeInSeconds": 1
				}
			},
			{
				"name": "dataflow1",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "Lookup1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "dataflow1",
						"type": "DataFlowReference",
						"parameters": {
							"year_id": {
								"value": "@item().c1",
								"type": "Expression"
							}
						},
						"datasetParameters": {
							"sink1": {
								"fileSystem": "stage",
								"pathToDir": "JoinTwoTables"
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					}
				}
			},
			{
				"name": "Stored procedure1",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Wait1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[datafactory].[MockProcedure]"
				},
				"linkedServiceName": {
					"referenceName": "DataFactoryDatalake",
					"type": "LinkedServiceReference"
				}
			}
		],
		"annotations": []
	}
}