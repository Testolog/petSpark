{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Summery",
						"type": "DatasetReference"
					},
					"name": "totalSummery"
				},
				{
					"dataset": {
						"referenceName": "Pivot",
						"type": "DatasetReference"
					},
					"name": "pivotTable"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "GenericCSVFile",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Filter1"
				},
				{
					"name": "Filter2"
				},
				{
					"name": "Join1"
				},
				{
					"name": "MapDrifted1",
					"description": "Creates an explicit mapping for each drifted column"
				},
				{
					"name": "MapDrifted2",
					"description": "Creates an explicit mapping for each drifted column"
				}
			],
			"script": "parameters{\n\tyear_id as integer\n}\nsource(output(\n\t\tYEAR_ID as string,\n\t\tperiodId as string,\n\t\tnamePeriod as string,\n\t\tbestDealSize as string,\n\t\tbestProductLineBySales as string,\n\t\tmaximumSalesPerProductLine as string,\n\t\tsumPerPeriod as string,\n\t\tbestProduct as string,\n\t\trnumb as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tpartitionBy('hash', 1)) ~> totalSummery\nsource(output(\n\t\tYEAR_ID as string,\n\t\tnamePeriod as string,\n\t\t{Classic Cars_maxSales} as string,\n\t\t{Classic Cars_avgSales} as string,\n\t\t{Classic Cars_minSales} as string,\n\t\t{Classic Cars_count} as string,\n\t\tMotorcycles_maxSales as string,\n\t\tMotorcycles_avgSales as string,\n\t\tMotorcycles_minSales as string,\n\t\tMotorcycles_count as string,\n\t\tPlanes_maxSales as string,\n\t\tPlanes_avgSales as string,\n\t\tPlanes_minSales as string,\n\t\tPlanes_count as string,\n\t\tShips_maxSales as string,\n\t\tShips_avgSales as string,\n\t\tShips_minSales as string,\n\t\tShips_count as string,\n\t\tTrains_maxSales as string,\n\t\tTrains_avgSales as string,\n\t\tTrains_minSales as string,\n\t\tTrains_count as string,\n\t\t{Trucks and Buses_maxSales} as string,\n\t\t{Trucks and Buses_avgSales} as string,\n\t\t{Trucks and Buses_minSales} as string,\n\t\t{Trucks and Buses_count} as string,\n\t\t{Vintage Cars_maxSales} as string,\n\t\t{Vintage Cars_avgSales} as string,\n\t\t{Vintage Cars_minSales} as string,\n\t\t{Vintage Cars_count} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tpartitionBy('hash', 1)) ~> pivotTable\nMapDrifted2 filter(YEAR_ID == $year_id,\n\tpartitionBy('hash', 1)) ~> Filter1\nMapDrifted1 filter(YEAR_ID == $year_id,\n\tpartitionBy('hash', 1)) ~> Filter2\nFilter1, Filter2 join(MapDrifted2@YEAR_ID == MapDrifted1@YEAR_ID\n\t&& MapDrifted2@namePeriod == MapDrifted1@namePeriod,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join1\npivotTable derive(YEAR_ID = toInteger(byName('YEAR_ID')),\n\t\tnamePeriod = toString(byName('namePeriod')),\n\t\t{Classic Cars_maxSales} = toString(byName('Classic Cars_maxSales')),\n\t\t{Classic Cars_avgSales} = toString(byName('Classic Cars_avgSales')),\n\t\t{Classic Cars_minSales} = toString(byName('Classic Cars_minSales')),\n\t\t{Classic Cars_count} = toString(byName('Classic Cars_count')),\n\t\tMotorcycles_maxSales = toString(byName('Motorcycles_maxSales')),\n\t\tMotorcycles_avgSales = toString(byName('Motorcycles_avgSales')),\n\t\tMotorcycles_minSales = toString(byName('Motorcycles_minSales')),\n\t\tMotorcycles_count = toString(byName('Motorcycles_count')),\n\t\tPlanes_maxSales = toString(byName('Planes_maxSales')),\n\t\tPlanes_avgSales = toString(byName('Planes_avgSales')),\n\t\tPlanes_minSales = toString(byName('Planes_minSales')),\n\t\tPlanes_count = toString(byName('Planes_count')),\n\t\tShips_maxSales = toString(byName('Ships_maxSales')),\n\t\tShips_avgSales = toString(byName('Ships_avgSales')),\n\t\tShips_minSales = toString(byName('Ships_minSales')),\n\t\tShips_count = toString(byName('Ships_count')),\n\t\tTrains_maxSales = toString(byName('Trains_maxSales')),\n\t\tTrains_avgSales = toString(byName('Trains_avgSales')),\n\t\tTrains_minSales = toString(byName('Trains_minSales')),\n\t\tTrains_count = toString(byName('Trains_count')),\n\t\t{Trucks and Buses_maxSales} = toString(byName('Trucks and Buses_maxSales')),\n\t\t{Trucks and Buses_avgSales} = toString(byName('Trucks and Buses_avgSales')),\n\t\t{Trucks and Buses_minSales} = toString(byName('Trucks and Buses_minSales')),\n\t\t{Trucks and Buses_count} = toString(byName('Trucks and Buses_count')),\n\t\t{Vintage Cars_maxSales} = toString(byName('Vintage Cars_maxSales')),\n\t\t{Vintage Cars_avgSales} = toString(byName('Vintage Cars_avgSales')),\n\t\t{Vintage Cars_minSales} = toString(byName('Vintage Cars_minSales')),\n\t\t{Vintage Cars_count} = toString(byName('Vintage Cars_count'))) ~> MapDrifted1\ntotalSummery derive(YEAR_ID = toInteger(byName('YEAR_ID')),\n\t\tperiodId = toString(byName('periodId')),\n\t\tnamePeriod = toString(byName('namePeriod')),\n\t\tbestDealSize = toString(byName('bestDealSize')),\n\t\tbestProductLineBySales = toString(byName('bestProductLineBySales')),\n\t\tmaximumSalesPerProductLine = toString(byName('maximumSalesPerProductLine')),\n\t\tsumPerPeriod = toString(byName('sumPerPeriod')),\n\t\tbestProduct = toString(byName('bestProduct')),\n\t\trnumb = toString(byName('rnumb'))) ~> MapDrifted2\nJoin1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}